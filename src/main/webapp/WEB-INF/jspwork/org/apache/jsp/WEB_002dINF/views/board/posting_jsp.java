/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/8.5.73
 * Generated at: 2021-12-27 03:43:46 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.WEB_002dINF.views.board;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;

public final class posting_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  static {
    _jspx_dependants = new java.util.HashMap<java.lang.String,java.lang.Long>(3);
    _jspx_dependants.put("/WEB-INF/lib/taglibs-standard-impl-1.2.5.jar", Long.valueOf(1639882520855L));
    _jspx_dependants.put("jar:file:/C:/workspace/Servlet_JSP/Develog/src/main/webapp/WEB-INF/lib/taglibs-standard-impl-1.2.5.jar!/META-INF/fn.tld", Long.valueOf(1425946270000L));
    _jspx_dependants.put("jar:file:/C:/workspace/Servlet_JSP/Develog/src/main/webapp/WEB-INF/lib/taglibs-standard-impl-1.2.5.jar!/META-INF/c.tld", Long.valueOf(1425946270000L));
  }

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = null;
  }

  private org.apache.jasper.runtime.TagHandlerPool _005fjspx_005ftagPool_005fc_005fforEach_0026_005fvar_005fitems;

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
    _005fjspx_005ftagPool_005fc_005fforEach_0026_005fvar_005fitems = org.apache.jasper.runtime.TagHandlerPool.getTagHandlerPool(getServletConfig());
  }

  public void _jspDestroy() {
    _005fjspx_005ftagPool_005fc_005fforEach_0026_005fvar_005fitems.release();
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    final java.lang.String _jspx_method = request.getMethod();
    if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method) && !javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSP들은 오직 GET, POST 또는 HEAD 메소드만을 허용합니다. Jasper는 OPTIONS 메소드 또한 허용합니다.");
      return;
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("<title>posting</title>\r\n");
      out.write("<link rel=\"stylesheet\" href=\"../resources/css/posting.css\">\r\n");
      out.write("	<link href=\"https://cdn.jsdelivr.net/npm/bootstrap@5.1.3/dist/css/bootstrap.min.css\" rel=\"stylesheet\" integrity=\"sha384-1BmE4kWBq78iYhFldvKuhfTAU6auU8tT94WrHftjDbrCEXSU1oBoqyl2QvZ6jIW3\" crossorigin=\"anonymous\">\r\n");
      out.write("   \r\n");
      out.write("    <!-- include libraries(jQuery, bootstrap) --> \r\n");
      out.write("    <link href=\"http://netdna.bootstrapcdn.com/bootstrap/3.3.5/css/bootstrap.css\" rel=\"stylesheet\"> \r\n");
      out.write("    <script src=\"http://cdnjs.cloudflare.com/ajax/libs/jquery/3.2.1/jquery.js\"></script>\r\n");
      out.write("    <script src=\"http://netdna.bootstrapcdn.com/bootstrap/3.3.5/js/bootstrap.js\"></script>\r\n");
      out.write("     \r\n");
      out.write("     <!-- include summernote css/js-->\r\n");
      out.write("    <link href=\"http://cdnjs.cloudflare.com/ajax/libs/summernote/0.8.8/summernote.css\" rel=\"stylesheet\"> \r\n");
      out.write("    <script src=\"http://cdnjs.cloudflare.com/ajax/libs/summernote/0.8.8/summernote.js\"></script>\r\n");
      out.write("  ");
      out.write("\r\n");
      out.write("</head>\r\n");
      out.write("\r\n");
      out.write("<body class=\"body\">\r\n");
      out.write("\r\n");
      out.write("	<form action=\"insert\" enctype=\"multipart/form-data\" name=\"insertForm\" method=\"post\"  role=\"form\" onsubmit=\"return false\">\r\n");
      out.write("	<div class=\"wrapper\">\r\n");
      out.write("		<div class=\"write-area\" style=\"max-width: 80%;\">\r\n");
      out.write("			<div class=\"head-title\">\r\n");
      out.write("				<textarea id=\"head-textarea\" class=\"head-textarea\" name=\"postTitle\" placeholder=\"제목을 입력하세요\" maxlength=\"200\" ></textarea>\r\n");
      out.write("			</div><!-- head title -->\r\n");
      out.write("\r\n");
      out.write("			<div class=\"line\"></div>\r\n");
      out.write("\r\n");
      out.write("			<textarea class=\"summernote\" id=\"summernote\" name=\"postContent\" style=\" height: fit-content;\"></textarea>\r\n");
      out.write("			<!-- content end -->\r\n");
      out.write("\r\n");
      out.write("			<div class=\"tag-area\">\r\n");
      out.write("                <div class=\"postTags\" id=\"postTags\"></div>  <!-- 태그 생성될 영역 -->\r\n");
      out.write("                <input type=\"text\" class=\"inputTag\" id=\"inputTag\" placeholder=\"태그를 입력하세요\" maxlength=\"15\" >\r\n");
      out.write("            </div> <!-- tag-area -->\r\n");
      out.write("            \r\n");
      out.write("		</div>\r\n");
      out.write("		<!-- write area -->\r\n");
      out.write("\r\n");
      out.write("		<footer>\r\n");
      out.write("            <button class=\"out-area\" type=\"button\" onclick=\"location.href='");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${contextPath}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("/main'\">\r\n");
      out.write("                <div id=\"out-image\">\r\n");
      out.write("                    <img src=\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${contextPath}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("/resources/images/boardIcon/arrow.png\" id=\"img-arrow\" >\r\n");
      out.write("                </div>\r\n");
      out.write("                 <span id=\"out-span\" >나가기</span>\r\n");
      out.write("            </button> <!-- /out-area -->\r\n");
      out.write("            \r\n");
      out.write("            <div class=\"btn-area\" >\r\n");
      out.write("                <button class=\"btn-pre-submit\" id=\"btn-pre-submit\" type=\"button\"> \r\n");
      out.write("                    <a style=\" color: white; text-decoration : none;\">출간하기</a>\r\n");
      out.write("                </button>\r\n");
      out.write("            </div>    \r\n");
      out.write("        </footer>\r\n");
      out.write("	</div><!-- wrapper -->\r\n");
      out.write("\r\n");
      out.write("	<!-- \r\n");
      out.write("        지금은 보이고 안보이고 정도만 작성\r\n");
      out.write("        나중에 움직이는걸로 바꾸고 싶으면 transform 했던거 찾으면 된다 \r\n");
      out.write("    -->\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("	<!-- modal slide up -->\r\n");
      out.write("	<div class=\"modal-content-area\">\r\n");
      out.write("		<div class=\"modal-content-box\">\r\n");
      out.write("\r\n");
      out.write("			<div class=\"thumbnail-area\">\r\n");
      out.write("				<div class=\"thumbnail-title\">\r\n");
      out.write("					<h4>썸네일 설정</h4>\r\n");
      out.write("				</div>\r\n");
      out.write("				<div class=\"thumb-img-area\">\r\n");
      out.write("					<img class=\"thumbImgCss\" name=\"thumbimg\" src=\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${contextPath}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("/resources/images/common/thumbnail.jpg\" alt=\"샘플이미지\">\r\n");
      out.write("				</div>\r\n");
      out.write("				<!--썸네일 값 -->\r\n");
      out.write("				<div id=\"fileArea\">\r\n");
      out.write("					 <input type=\"file\" name=\"img\" onchange=\"loadImg(this)\" id=\"thumbImg\" accept=\"image/jpeg, image/png, image/jpg, image/gif\"> \r\n");
      out.write("					\r\n");
      out.write("				</div>\r\n");
      out.write("			</div> <!-- /thumbnail-area -->\r\n");
      out.write("\r\n");
      out.write("			<div class=\"modalLine\"></div>\r\n");
      out.write("\r\n");
      out.write("			<div class=\"set-area\">\r\n");
      out.write("				<div class=\"open\">\r\n");
      out.write(" \r\n");
      out.write("					<div class=\"open-title\">\r\n");
      out.write("						<h4>공개 설정</h4>\r\n");
      out.write("					</div>\r\n");
      out.write("					<div class=\"open-btns\" >\r\n");
      out.write("						<button class=\"all-btn postStatusBtn openBtn\" name=\"openBtn\" value=\"500\" type=\"button\">\r\n");
      out.write("							<img src=\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${contextPath}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("/resources/images/boardIcon/earth.png\" class=\"img-earth\" alt=\"\">\r\n");
      out.write("							<p>전체 공개</p>\r\n");
      out.write("						</button>\r\n");
      out.write("						<button class=\"lock-btn postStatusBtn openBtn\" name=\"openBtn\"  value=\"503\" type=\"button\">\r\n");
      out.write("							<img src=\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${contextPath}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("/resources/images/boardIcon/padlock.png\" class=\"img-lock\" alt=\"\">\r\n");
      out.write("							<p>비공개</p>\r\n");
      out.write("						</button>\r\n");
      out.write("						<!-- 상태코드 넘어가는 input -->\r\n");
      out.write("						<input type=\"hidden\" name=\"postStatusCode\" >\r\n");
      out.write("					</div>\r\n");
      out.write("				</div>\r\n");
      out.write("				<div class=\"category\">\r\n");
      out.write("					<div class=\"category-title\">\r\n");
      out.write("						<h4>카테고리 설정</h4>\r\n");
      out.write("					</div>\r\n");
      out.write("					<div class=\"category-input\">\r\n");
      out.write("						<div class=\"sort-post dropstart border\" data-bs-toggle=\"dropdown\" aria-expanded=\"false\">\r\n");
      out.write("							<select name=\"categoryCode\" id=\"categoryCode\">\r\n");
      out.write("								");
      if (_jspx_meth_c_005fforEach_005f0(_jspx_page_context))
        return;
      out.write(" \r\n");
      out.write("							</select>\r\n");
      out.write("						</div>\r\n");
      out.write("					</div>\r\n");
      out.write("\r\n");
      out.write("				</div>\r\n");
      out.write("				<div class=\"set-btns\">\r\n");
      out.write("					<button class=\"btn-cancel\" >취소</button>\r\n");
      out.write("					<button class=\"btn-submit\" onclick=\"return postValidate();\">출간하기</button>\r\n");
      out.write("				</div>\r\n");
      out.write("\r\n");
      out.write("			</div>\r\n");
      out.write("\r\n");
      out.write("		</div>\r\n");
      out.write("	</div>\r\n");
      out.write("</form>\r\n");
      out.write("	\r\n");
      out.write("	\r\n");
      out.write(" <link href=\"https://cdn.jsdelivr.net/npm/summernote@0.8.18/dist/summernote.min.css\" rel=\"stylesheet\"> \r\n");
      out.write("<script src=\"https://cdn.jsdelivr.net/npm/summernote@0.8.18/dist/summernote.min.js\"></script>\r\n");
      out.write("<sript src=\" https://cdnjs.cloudflare.com/ajax/libs/summernote/0.8.18/lang/summernote-ko-KR.min.js\"></script>\r\n");
      out.write("<script src=\"https://unpkg.com/js-offcanvas@1.2.8/dist/_js/js-offcanvas.pkgd.min.js\"></script> \r\n");
      out.write("<link href=\"https://unpkg.com/js-offcanvas@1.2.8/dist/_css/prefixed/js-offcanvas.css\" rel=\"stylesheet\">\r\n");
      out.write("\r\n");
      out.write("<script src=\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${contextPath}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("/resources/js/posting.js\"></script>\r\n");
      out.write("</body>\r\n");
      out.write("</html>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }

  private boolean _jspx_meth_c_005fforEach_005f0(javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  c:forEach
    org.apache.taglibs.standard.tag.rt.core.ForEachTag _jspx_th_c_005fforEach_005f0 = (org.apache.taglibs.standard.tag.rt.core.ForEachTag) _005fjspx_005ftagPool_005fc_005fforEach_0026_005fvar_005fitems.get(org.apache.taglibs.standard.tag.rt.core.ForEachTag.class);
    boolean _jspx_th_c_005fforEach_005f0_reused = false;
    try {
      _jspx_th_c_005fforEach_005f0.setPageContext(_jspx_page_context);
      _jspx_th_c_005fforEach_005f0.setParent(null);
      // /WEB-INF/views/board/posting.jsp(110,8) name = items type = javax.el.ValueExpression reqTime = true required = false fragment = false deferredValue = true expectedTypeName = java.lang.Object deferredMethod = false methodSignature = null
      _jspx_th_c_005fforEach_005f0.setItems(new org.apache.jasper.el.JspValueExpression("/WEB-INF/views/board/posting.jsp(110,8) '${category}'",_jsp_getExpressionFactory().createValueExpression(_jspx_page_context.getELContext(),"${category}",java.lang.Object.class)).getValue(_jspx_page_context.getELContext()));
      // /WEB-INF/views/board/posting.jsp(110,8) name = var type = java.lang.String reqTime = false required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_c_005fforEach_005f0.setVar("c");
      int[] _jspx_push_body_count_c_005fforEach_005f0 = new int[] { 0 };
      try {
        int _jspx_eval_c_005fforEach_005f0 = _jspx_th_c_005fforEach_005f0.doStartTag();
        if (_jspx_eval_c_005fforEach_005f0 != javax.servlet.jsp.tagext.Tag.SKIP_BODY) {
          do {
            out.write("\r\n");
            out.write("								\r\n");
            out.write("									<option value=\"");
            out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${c.categoryCode}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
            out.write('"');
            out.write('>');
            out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${c.categoryName}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
            out.write("</option>\r\n");
            out.write("								\r\n");
            out.write("								");
            int evalDoAfterBody = _jspx_th_c_005fforEach_005f0.doAfterBody();
            if (evalDoAfterBody != javax.servlet.jsp.tagext.BodyTag.EVAL_BODY_AGAIN)
              break;
          } while (true);
        }
        if (_jspx_th_c_005fforEach_005f0.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
          return true;
        }
      } catch (java.lang.Throwable _jspx_exception) {
        while (_jspx_push_body_count_c_005fforEach_005f0[0]-- > 0)
          out = _jspx_page_context.popBody();
        _jspx_th_c_005fforEach_005f0.doCatch(_jspx_exception);
      } finally {
        _jspx_th_c_005fforEach_005f0.doFinally();
      }
      _005fjspx_005ftagPool_005fc_005fforEach_0026_005fvar_005fitems.reuse(_jspx_th_c_005fforEach_005f0);
      _jspx_th_c_005fforEach_005f0_reused = true;
    } finally {
      org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_c_005fforEach_005f0, _jsp_getInstanceManager(), _jspx_th_c_005fforEach_005f0_reused);
    }
    return false;
  }
}
